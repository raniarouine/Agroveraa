services:
  database:
    image: postgres:17-alpine
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD", "pg_isready", "-d", "${POSTGRES_DB}", "-U", "${POSTGRES_USER}" ]
      timeout: 5s
      retries: 5
      start_period: 60s
    volumes:
      - postgres_data:/var/lib/postgresql/data:rw


  app-django:
    build:
      context: ./Core  # Remplace "backend" par "Core"
      dockerfile: Dockerfile
    container_name: django_app
    restart: always
    environment:
      - DEBUG=1
      - DATABASE_NAME=${POSTGRES_DB}
      - DATABASE_USER=${POSTGRES_USER}
      - DATABASE_PASSWORD=${POSTGRES_PASSWORD}
      - DATABASE_HOST=database
      - DATABASE_PORT=5432
    ports:
      - "8000:8000"
    depends_on:
      - database

  app-react:
    build:
      context: ./react-website  # Construire Ã  partir de "react-website"
      dockerfile: Dockerfile
    container_name: react_app
    restart: always
    ports:
      - "3000:3000"
    depends_on:
      - app-django


volumes:
  postgres_data:

